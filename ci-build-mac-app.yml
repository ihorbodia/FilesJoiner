# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: 'macOS-latest'

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: NuGetCommand@2
    displayName: Restore Nugets
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: Build FileJoiner
    inputs:
      command: 'build'
      projects: '**/FileJoiner.csproj'
  - task: MSBuild@1
    inputs:
      solution: '**/*.sln'
      msbuildArguments: '-t:BundleApp -p:PublishProfile=$(System.DefaultWorkingDirectory)/FileJoinerNet/FileJoiner/FileJoiner/Properties/PublishProfiles/FolderProfile1.pubxml'
  - task: CopyFiles@2
    displayName: Copy files to artifacts folder
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: '**/bin/Release/netcoreapp3.1/publish/mac/**'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: Publish artifcats
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: mac

- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'specific'
      itemPattern: '**/publish/mac/**'
      downloadPath: '$(Pipeline.Workspace)/a/'
  - task: Bash@3
    displayName: Running chmod +x FileJoiner
    inputs:
      targetType: 'inline'
      script: chmod +x FileJoiner.app/Contents/MacOS/FileJoiner
      workingDirectory: '$(Build.ArtifactStagingDirectory)/mac/FileJoinerNet/FileJoiner/FileJoiner/bin/Release/netcoreapp3.1/publish/mac/'