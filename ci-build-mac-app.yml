# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: 'macOS-latest'

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: NuGetCommand@2
    displayName: Restore Nugets
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'
  - task: MSBuild@1
    inputs:
      solution: '**/*.sln'
      msbuildArguments: '-t:BundleApp -p:PublishProfile=$(System.DefaultWorkingDirectory)/FileJoinerNet/FileJoiner/FileJoiner/Properties/PublishProfiles/FolderProfile1.pubxml -p:PublishDir=$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: Publish artifcats
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: mac

- job: Linux
  dependsOn: Windows
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'current'
      artifactName: mac
      targetPath: '$(Build.ArtifactStagingDirectory)'
  # - task: DownloadBuildArtifacts@0
  #   inputs:
  #     buildType: 'current'
  #     downloadType: 'specific'
  #     itemPattern: '**/publish/mac/**'
  #     downloadPath: '$(Pipeline.Workspace)/a/'

  - task: Bash@3
    displayName: Content of ArtifactStaging directory
    inputs:
      targetType: 'inline'
      script: ls $(Build.ArtifactStagingDirectory)

  - task: Bash@3
    displayName: Running chmod +x FileJoiner
    inputs:
      targetType: 'inline'
      script: chmod -R a+rwX FileJoiner.app
      workingDirectory: '$(Build.ArtifactStagingDirectory)/mac/'
  - task: PublishBuildArtifacts@1
    displayName: Publish artifcats one more time
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: macNew
