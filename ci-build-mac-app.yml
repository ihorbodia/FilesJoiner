# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: 'macOS-latest'

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: NuGetCommand@2
    displayName: Restore Nugets
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'
  - task: MSBuild@1
    inputs:
      solution: '**/*.sln'
      msbuildArguments: '-t:BundleApp -p:PublishProfile=$(System.DefaultWorkingDirectory)/FileJoinerNet/FileJoiner/FileJoiner/Properties/PublishProfiles/FolderProfile1.pubxml -p:PublishDir=$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: Publish artifcats
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: mac
  - task: ZipAndDropBox@0
    inputs:
     sourceDir: '$(Build.ArtifactsStagingDirectory)'
     zipPath: '/mydropboxfolder/mybuild.zip'
     dropboxtoken: 'sl.ApAx2bG1dCGW0JQpd_ToxcD3WIiSxVVo3OM3fkwvvit458g9sN320_hHQFhtxp3UTjR_wG4IbrhoP5YlyQf0ekphXM4wTJYV2IgymeHpCOztxMNVyyXGeoK7lF8LIuYUtIp2rOo'
# - job: MacOS
#   dependsOn: Windows
#   pool:
#     vmImage: 'macOS-latest'
#   steps:
#   - task: DownloadPipelineArtifact@2
#     inputs:
#       buildType: 'current'
#       artifactName: mac
#       targetPath: '$(Build.ArtifactStagingDirectory)'
#   - task: Bash@3
#     displayName: Running chmod -R a+rwX FileJoiner
#     inputs:
#       targetType: 'inline'
#       script: chmod -R a+rwx FileJoiner.app
#       workingDirectory: '$(Build.ArtifactStagingDirectory)'